name: Docker Image CI

on:
  push:
    branches: [ "main" , "staging"]

jobs:

  build-compsole:

    runs-on: ubuntu-latest

    steps:
    - name: Extract branch name
      shell: bash
      run: echo "branch=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}" >> $GITHUB_OUTPUT
      id: extract_branch
    - uses: actions/checkout@v4
    - name: Set up QEMU.
      uses: docker/setup-qemu-action@v3
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    - name: Login to TGM Docker Registry
      uses: docker/login-action@v3
      with:
        registry: registry.psuccso.org
        username: robot$robot$compsole+github
        password: ${{ secrets.DOCKER_PASSWORD }}
    - name: Generate Tag Names
      run: |
        echo "${{ steps.extract_branch.outputs.branch }}"
        if [ ${{ steps.extract_branch.outputs.branch }} = "main" ]; then
          echo "TAG_LATEST=compsole:latest" >> $GITHUB_ENV
          echo "TAG_COMMIT=compsole:$(git rev-parse --short HEAD)" >> $GITHUB_ENV
        elif [ ${{ steps.extract_branch.outputs.branch }} = "stage" ]; then
          echo "TAG_LATEST=compsole-stage:latest" >> $GITHUB_ENV
          echo "TAG_COMMIT=compsole-stage:$(git rev-parse --short HEAD)" >> $GITHUB_ENV
        else
          exit 0
        fi
    - name: Build and push
      uses: docker/build-push-action@v6
      with:
        context: .
        platforms: linux/amd64,linux/arm64
        file: ./Dockerfile
        push: true
        tags: |
          registry.psuccso.org/compsole/${{ env.TAG_LATEST }}
          registry.psuccso.org/compsole/${{ env.TAG_COMMIT }}
        cache-from: type=registry,ref=registry.psuccso.org/compsole/${{ env.TAG_LATEST }}
        cache-to: type=inline

  build-compsole-ui:

    runs-on: ubuntu-latest

    steps:
    - name: Extract branch name
      shell: bash
      run: echo "branch=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}" >> $GITHUB_OUTPUT
      id: extract_branch
    - uses: actions/checkout@v4
    - name: Set up QEMU.
      uses: docker/setup-qemu-action@v3
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    - name: Login to TGM Docker Registry
      uses: docker/login-action@v3
      with:
        registry: registry.psuccso.org
        username: robot$compsole+github
        password: ${{ secrets.DOCKER_PASSWORD }}
    - name: Generate Tag Names
      run: |
        echo "${{ steps.extract_branch.outputs.branch }}"
        if [ ${{ steps.extract_branch.outputs.branch }} = "main" ]; then
          echo "TAG_LATEST=compsole-ui:latest" >> $GITHUB_ENV
          echo "TAG_COMMIT=compsole-ui:$(git rev-parse --short HEAD)" >> $GITHUB_ENV
        elif [ ${{ steps.extract_branch.outputs.branch }} = "stage" ]; then
          echo "TAG_LATEST=compsole-ui-stage:latest" >> $GITHUB_ENV
          echo "TAG_COMMIT=compsole-ui-stage:$(git rev-parse --short HEAD)" >> $GITHUB_ENV
        else
          exit 0
        fi
    - name: Build and push
      uses: docker/build-push-action@v6
      with:
        context: ./ui
        platforms: linux/amd64,linux/arm64
        file: ./ui/Dockerfile
        push: true
        tags: |
          registry.psuccso.org/compsole/${{ env.TAG_LATEST }}
          registry.psuccso.org/compsole/${{ env.TAG_COMMIT }}
        cache-from: type=registry,ref=registry.psuccso.org/compsole/${{ env.TAG_LATEST }}
        cache-to: type=inline
